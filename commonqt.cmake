if (${CMAKE_SYSTEM_NAME} MATCHES "Android")
    set(CMAKE_CXX_STANDARD 17)
else ()
    set(CMAKE_CXX_STANDARD 11)
endif ()
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)
find_package(QT NAMES Qt6 Qt5 COMPONENTS REQUIRED Core)
find_package(Qt${QT_VERSION_MAJOR} COMPONENTS REQUIRED Core)
#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=#
macro(common_add_QT_REQUIRED_MODULES)
    set(QT_REQUIRED_MODULES "")
    get_property(_ALL_QT_MODULES GLOBAL PROPERTY ALL_QT_MODULES)
    foreach (item IN ITEMS ${ARGN})
        if (NOT Qt${QT_VERSION_MAJOR}::${item} IN_LIST QT_REQUIRED_MODULES)
            find_package(Qt${QT_VERSION_MAJOR} COMPONENTS REQUIRED ${item})
            list(APPEND QT_REQUIRED_MODULES Qt${QT_VERSION_MAJOR}::${item})
        endif ()
        if (NOT ${item} IN_LIST _ALL_QT_MODULES)
            list(APPEND _ALL_QT_MODULES ${item})
        endif ()
    endforeach ()
    set_property(GLOBAL PROPERTY ALL_QT_MODULES ${_ALL_QT_MODULES})
    unset(_ALL_QT_MODULES)
endmacro(common_add_QT_REQUIRED_MODULES)

#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=#
macro(common_find_files_by_extension FINDED_FILES SEARCH_PATH)
    set(${FINDED_FILES} "")
    foreach (ext IN ITEMS ${ARGN})
        file(GLOB_RECURSE TMP_FINDED_FILES "${SEARCH_PATH}/*.${ext}")
        list(LENGTH TMP_FINDED_FILES IS_NOT_EMPTY)
        if (${IS_NOT_EMPTY})
            list(APPEND ${FINDED_FILES} ${TMP_FINDED_FILES})
        endif ()
        unset(TMP_FINDED_FILES)
    endforeach ()
endmacro(common_find_files_by_extension)

#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=#
macro(common_find_QT_PROJECT_FILES QT_PROJECT_FILES SEARCH_PATH)
    common_find_files_by_extension(${QT_PROJECT_FILES} ${SEARCH_PATH} "c" "cpp" "h" "ui")
    common_find_files_by_extension(QRC_RESOURCES ${SEARCH_PATH} "qrc")
    list(LENGTH QRC_RESOURCES IS_NOT_EMPTY)
    if (${IS_NOT_EMPTY})
        qt5_add_resources(RESOURCES ${QRC_RESOURCES})
        list(APPEND ${QT_PROJECT_FILES} ${RESOURCES})
    endif ()
    unset(QRC_RESOURCES)
endmacro()

macro(common_add_library)
    if(BUILD_LIBRARY_OUTPUT_DIRECTORY)
        set(_CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_LIBRARY_OUTPUT_DIRECTORY})
        set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${BUILD_LIBRARY_OUTPUT_DIRECTORY}/${ANDROID_ABI}")
        add_library(${ARGN})
        set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${_CMAKE_LIBRARY_OUTPUT_DIRECTORY})
        unset(_CMAKE_LIBRARY_OUTPUT_DIRECTORY)
    else()
        add_library(${ARGN})
    endif()
endmacro()
